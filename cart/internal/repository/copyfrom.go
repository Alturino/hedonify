// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package repository

import (
	"context"
)

// iteratorForInsertCartItems implements pgx.CopyFromSource.
type iteratorForInsertCartItems struct {
	rows                 []InsertCartItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertCartItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertCartItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].CartID,
		r.rows[0].ProductID,
		r.rows[0].Quantity,
		r.rows[0].Price,
	}, nil
}

func (r iteratorForInsertCartItems) Err() error {
	return nil
}

func (q *Queries) InsertCartItems(ctx context.Context, arg []InsertCartItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"cart_items"}, []string{"id", "cart_id", "product_id", "quantity", "price"}, &iteratorForInsertCartItems{rows: arg})
}
