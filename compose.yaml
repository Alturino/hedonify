include:
  - ./compose.logging.yaml
services:
  user-service:
    develop:
      watch:
        - path: ./internal/
          action: rebuild
        - path: ./cmd/
          action: rebuild
        - path: ./user/
          action: rebuild
    build:
      context: .
    container_name: user-service
    command: ["./ecommerce", "user"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - logging
      - postgres
    ports:
      - 8080:8080
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-retries: 5
        loki-batch-size: 1000
  product-service:
    develop:
      watch:
        - path: ./internal/
          action: rebuild
        - path: ./cmd/
          action: rebuild
        - path: ./product/
          action: rebuild
    build:
      context: .
    container_name: product-service
    command: ["./ecommerce", "product"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - logging
      - postgres
    ports:
      - 8081:8080
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-retries: 5
        loki-batch-size: 1000
  postgres:
    container_name: postgres
    image: postgres:16.1-alpine3.19
    restart: always
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - postgres
    healthcheck:
      test:
        ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
networks:
  postgres:
    name: postgres
